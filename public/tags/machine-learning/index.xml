<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Machine learning | Jixing Liu</title>
    <link>/tags/machine-learning/</link>
      <atom:link href="/tags/machine-learning/index.xml" rel="self" type="application/rss+xml" />
    <description>Machine learning</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Sun, 26 Apr 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>img/map[gravatar:%!s(bool=false) shape:circle]</url>
      <title>Machine learning</title>
      <link>/tags/machine-learning/</link>
    </image>
    
    <item>
      <title>a gentle introduction to tidymodels</title>
      <link>/post/a-gentle-introduction-to-tidymodels/</link>
      <pubDate>Sun, 26 Apr 2020 00:00:00 +0000</pubDate>
      <guid>/post/a-gentle-introduction-to-tidymodels/</guid>
      <description>


&lt;div id=&#34;setup&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;SETUP&lt;/h2&gt;
&lt;/div&gt;
&lt;div id=&#34;load-library&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Load library&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidymodels)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;eda&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;EDA&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;iris %&amp;gt;%
    janitor::clean_names() %&amp;gt;%
    set_names(colnames(.) %&amp;gt;%
                  str_replace_all(., &amp;quot;_&amp;quot;, &amp;quot; &amp;quot;) %&amp;gt;%
                  str_to_title()) %&amp;gt;%
    select_if(is.numeric) %&amp;gt;%
    gather() %&amp;gt;%
    ggplot(aes(x = value)) +
    facet_wrap(~ key, scales = &amp;quot;free&amp;quot;, ncol = 4) +
    geom_histogram()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-04-26-a-gentle-introduction-to-tidymodels_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;70%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;iris %&amp;gt;%
    janitor::clean_names() %&amp;gt;%
    set_names(colnames(.) %&amp;gt;%
                  str_replace_all(., &amp;quot;_&amp;quot;, &amp;quot; &amp;quot;) %&amp;gt;%
                  str_to_title()) %&amp;gt;%
    select_if(is.factor) %&amp;gt;%
    gather() %&amp;gt;%
    ggplot(aes(x = value)) +
    geom_bar()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-04-26-a-gentle-introduction-to-tidymodels_files/figure-html/unnamed-chunk-2-2.png&#34; width=&#34;70%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;split&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;split&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df  &amp;lt;- iris
set.seed(seed = 1972) 

train_test_split &amp;lt;-
    rsample::initial_split(
        data = df,     
        prop = 0.6   
    ) 

train_test_split&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;lt;90/60/150&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;train_tbl &amp;lt;- train_test_split %&amp;gt;% training() 
test_tbl  &amp;lt;- train_test_split %&amp;gt;% testing() &lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;recipes&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;recipes&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;recipe_simple &amp;lt;- function(dataset) {
  recipe(Species ~ ., data = dataset ) %&amp;gt;%
    step_corr(all_predictors()) %&amp;gt;%
    step_center(all_predictors(), -all_outcomes()) %&amp;gt;%
    step_scale(all_predictors(), -all_outcomes()) %&amp;gt;%
    prep(dataset)
}

recipe_prepped &amp;lt;- recipe_simple(dataset = train_tbl)

train_baked &amp;lt;- bake(recipe_prepped, new_data = train_tbl)
test_baked  &amp;lt;- bake(recipe_prepped, new_data = test_tbl)

recipe_prepped&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Data Recipe
## 
## Inputs:
## 
##       role #variables
##    outcome          1
##  predictor          4
## 
## Training data contained 90 data points and no missing data.
## 
## Operations:
## 
## Correlation filter removed Petal.Length [trained]
## Centering for Sepal.Length, Sepal.Width, Petal.Width [trained]
## Scaling for Sepal.Length, Sepal.Width, Petal.Width [trained]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;model-training&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Model Training&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;iris_ranger &amp;lt;- 
  rand_forest(trees = 100, mode = &amp;quot;classification&amp;quot;) %&amp;gt;%
  set_engine(&amp;quot;ranger&amp;quot;) %&amp;gt;%
  fit(Species ~ ., data = train_baked)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;predictions&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Predictions&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;iris_ranger %&amp;gt;%
  predict(test_baked) %&amp;gt;%
  bind_cols(test_baked) %&amp;gt;%
  glimpse()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 60
## Columns: 5
## $ .pred_class  &amp;lt;fct&amp;gt; setosa, setosa, setosa, setosa, setosa, setosa, setosa, …
## $ Sepal.Length &amp;lt;dbl&amp;gt; -0.8625644, -1.4471337, -0.9794783, -0.5118229, -0.97947…
## $ Sepal.Width  &amp;lt;dbl&amp;gt; 1.2051348, 0.2410270, 1.4461618, 2.1692426, 0.9641078, 0…
## $ Petal.Width  &amp;lt;dbl&amp;gt; -1.3494745, -1.3494745, -1.3494745, -1.0831309, -1.34947…
## $ Species      &amp;lt;fct&amp;gt; setosa, setosa, setosa, setosa, setosa, setosa, setosa, …&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;model-validation&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Model Validation&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;iris_ranger %&amp;gt;%
  predict(test_baked) %&amp;gt;%
  bind_cols(test_baked) %&amp;gt;%
  metrics(truth = Species, estimate = .pred_class)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 2 x 3
##   .metric  .estimator .estimate
##   &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;
## 1 accuracy multiclass     0.967
## 2 kap      multiclass     0.950&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;per-classifier-metrics&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Per classifier metrics&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;iris_ranger %&amp;gt;%
  predict(test_baked, type = &amp;quot;prob&amp;quot;) %&amp;gt;%
  bind_cols(test_baked) %&amp;gt;%
  roc_curve(Species, .pred_setosa:.pred_virginica) %&amp;gt;%
  autoplot()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-04-26-a-gentle-introduction-to-tidymodels_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;70%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;links&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;links&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://rviews.rstudio.com/2019/06/19/a-gentle-intro-to-tidymodels/&#34;&gt;A Gentle Introduction to tidymodels · R Views&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>ML Workflow</title>
      <link>/post/ml-workflow/</link>
      <pubDate>Sun, 26 Apr 2020 00:00:00 +0000</pubDate>
      <guid>/post/ml-workflow/</guid>
      <description>


&lt;div id=&#34;setup&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Setup&lt;/h2&gt;
&lt;/div&gt;
&lt;div id=&#34;load-pkg&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Load pkg&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidymodels)  # Loads parsnip, rsample, recipes, yardstick
library(skimr)       # Quickly get a sense of data
library(knitr) &lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;load-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Load Data&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;telco &amp;lt;- read_csv(&amp;quot;data/WA_Fn-UseC_-Telco-Customer-Churn.csv&amp;quot;)

telco %&amp;gt;% head() %&amp;gt;% kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
customerID
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
gender
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
SeniorCitizen
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Partner
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Dependents
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
tenure
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
PhoneService
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
MultipleLines
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
InternetService
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
OnlineSecurity
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
OnlineBackup
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
DeviceProtection
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
TechSupport
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
StreamingTV
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
StreamingMovies
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Contract
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
PaperlessBilling
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
PaymentMethod
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
MonthlyCharges
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
TotalCharges
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Churn
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
7590-VHVEG
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Female
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Yes
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No phone service
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
DSL
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Yes
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Month-to-month
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Yes
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Electronic check
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
29.85
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
29.85
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
5575-GNVDE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Male
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
34
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Yes
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
DSL
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Yes
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Yes
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
One year
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Mailed check
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
56.95
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1889.50
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
3668-QPYBK
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Male
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Yes
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
DSL
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Yes
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Yes
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Month-to-month
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Yes
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Mailed check
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
53.85
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
108.15
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Yes
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
7795-CFOCW
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Male
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
45
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No phone service
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
DSL
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Yes
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Yes
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Yes
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
One year
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Bank transfer (automatic)
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
42.30
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1840.75
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
9237-HQITU
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Female
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Yes
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Fiber optic
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Month-to-month
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Yes
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Electronic check
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
70.70
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
151.65
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Yes
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
9305-CDSKC
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Female
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Yes
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Yes
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Fiber optic
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Yes
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Yes
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Yes
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Month-to-month
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Yes
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Electronic check
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
99.65
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
820.50
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Yes
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;eda-skim-the-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;EDA: Skim the Data&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;telco %&amp;gt;% skim()&lt;/code&gt;&lt;/pre&gt;
&lt;table style=&#39;width: auto;&#39;
        class=&#39;table table-condensed&#39;&gt;
&lt;caption&gt;
&lt;span id=&#34;tab:unnamed-chunk-3&#34;&gt;Table 1: &lt;/span&gt;Data summary
&lt;/caption&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Name
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Piped data
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Number of rows
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
7043
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Number of columns
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
21
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
_______________________
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Column type frequency:
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
character
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
17
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
numeric
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
4
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
________________________
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Group variables
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
None
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Variable type: character&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
skim_variable
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
n_missing
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
complete_rate
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
min
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
max
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
empty
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
n_unique
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
whitespace
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
customerID
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
10
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
10
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7043
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
gender
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Partner
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Dependents
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
PhoneService
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
MultipleLines
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
16
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
InternetService
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
11
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
OnlineSecurity
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
19
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
OnlineBackup
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
19
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
DeviceProtection
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
19
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
TechSupport
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
19
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
StreamingTV
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
19
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
StreamingMovies
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
19
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Contract
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
14
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
PaperlessBilling
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
PaymentMethod
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
25
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Churn
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Variable type: numeric&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
skim_variable
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
n_missing
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
complete_rate
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
mean
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
sd
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
p0
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
p25
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
p50
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
p75
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
p100
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
hist
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SeniorCitizen
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.16
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.37
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.00
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.00
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.00
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.00
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.00
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
▇▁▁▁▂
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
tenure
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
32.37
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
24.56
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.00
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
9.00
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
29.00
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
55.00
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
72.00
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
▇▃▃▃▆
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
MonthlyCharges
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
64.76
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
30.09
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
18.25
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
35.50
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
70.35
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
89.85
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
118.75
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
▇▅▆▇▅
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
TotalCharges
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
11
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2283.30
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2266.77
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
18.80
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
401.45
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1397.47
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3794.74
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8684.80
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
▇▂▂▂▁
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div id=&#34;data-processing&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;data processing&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;telco &amp;lt;- telco %&amp;gt;%
    select(-customerID) %&amp;gt;%
    drop_na()&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df &amp;lt;- telco&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;tidymodels-workflow&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Tidymodels Workflow&lt;/h2&gt;
&lt;/div&gt;
&lt;div id=&#34;traintest-split&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Train/Test Split&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(seed = 1972) 

train_test_split &amp;lt;-
    rsample::initial_split(
        data = df,     
        prop = 0.80   
    ) 

train_test_split&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;lt;5626/1406/7032&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;train_tbl &amp;lt;- train_test_split %&amp;gt;% training() 
test_tbl  &amp;lt;- train_test_split %&amp;gt;% testing() &lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;prepare&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Prepare&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;recipe_simple &amp;lt;- function(dataset) {
    recipe(Churn ~ ., data = dataset) %&amp;gt;%
        step_string2factor(all_nominal(), -all_outcomes()) %&amp;gt;%
        prep(data = dataset)
}

recipe_prepped &amp;lt;- recipe_simple(dataset = train_tbl)

train_baked &amp;lt;- bake(recipe_prepped, new_data = train_tbl)
test_baked  &amp;lt;- bake(recipe_prepped, new_data = test_tbl)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;generalized-linear-model-baseline&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Generalized Linear Model (Baseline)&lt;/h3&gt;
&lt;div id=&#34;fit-the-model&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;Fit the Model&lt;/h5&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;logistic_glm &amp;lt;- logistic_reg(mode = &amp;quot;classification&amp;quot;) %&amp;gt;%
    set_engine(&amp;quot;glm&amp;quot;) %&amp;gt;%
    fit(Churn ~ ., data = train_baked)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;assess-performance&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;Assess Performance&lt;/h5&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;predictions_glm &amp;lt;- logistic_glm %&amp;gt;%
    predict(new_data = test_baked) %&amp;gt;%
    bind_cols(test_baked %&amp;gt;% select(Churn))

predictions_glm %&amp;gt;% head() %&amp;gt;% kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
.pred_class
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Churn
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Yes
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Yes
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Yes
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Yes
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;accuracy-precision-recall-and-f1-score&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;Accuracy, Precision , Recall and F1 Score&lt;/h5&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tibble(
  &amp;quot;accuracy&amp;quot; =
    accuracy(predictions_glm, Churn, .pred_class) %&amp;gt;%
    select(.estimate),
  &amp;quot;precision&amp;quot; =
    precision(predictions_glm, Churn, .pred_class) %&amp;gt;%
    select(.estimate),
  &amp;quot;recall&amp;quot; =
    recall(predictions_glm, Churn, .pred_class) %&amp;gt;%
    select(.estimate),
  &amp;quot;F1 score&amp;quot; =
    f_meas(predictions_glm, Churn, .pred_class) %&amp;gt;%
    select(.estimate),
) %&amp;gt;%
  unnest(cols = c(accuracy, precision, recall, `F1 score`)) %&amp;gt;%
  kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
accuracy
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
precision
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
recall
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
F1 score
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.8058321
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.8376916
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.909002
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.8718911
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;random-forest&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Random Forest&lt;/h3&gt;
&lt;div id=&#34;cross-validation---10-fold&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Cross Validation - 10-Fold&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cross_val_tbl &amp;lt;- vfold_cv(train_tbl, v = 10)
cross_val_tbl&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## #  10-fold cross-validation 
## # A tibble: 10 x 2
##    splits             id    
##    &amp;lt;named list&amp;gt;       &amp;lt;chr&amp;gt; 
##  1 &amp;lt;split [5.1K/563]&amp;gt; Fold01
##  2 &amp;lt;split [5.1K/563]&amp;gt; Fold02
##  3 &amp;lt;split [5.1K/563]&amp;gt; Fold03
##  4 &amp;lt;split [5.1K/563]&amp;gt; Fold04
##  5 &amp;lt;split [5.1K/563]&amp;gt; Fold05
##  6 &amp;lt;split [5.1K/563]&amp;gt; Fold06
##  7 &amp;lt;split [5.1K/562]&amp;gt; Fold07
##  8 &amp;lt;split [5.1K/562]&amp;gt; Fold08
##  9 &amp;lt;split [5.1K/562]&amp;gt; Fold09
## 10 &amp;lt;split [5.1K/562]&amp;gt; Fold10&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cross_val_tbl %&amp;gt;% pluck(&amp;quot;splits&amp;quot;, 1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;lt;5063/563/5626&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;random-forest-1&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Random Forest&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rf_fun &amp;lt;- function(split, id, try, tree) {
    
    analysis_set &amp;lt;- split %&amp;gt;% analysis()
    analysis_prepped &amp;lt;- analysis_set %&amp;gt;% recipe_simple()
    analysis_baked &amp;lt;- analysis_prepped %&amp;gt;% bake(new_data = analysis_set)
    
    model_rf &amp;lt;-
        rand_forest(
            mode = &amp;quot;classification&amp;quot;,
            mtry = try,
            trees = tree
        ) %&amp;gt;%
        set_engine(&amp;quot;ranger&amp;quot;,
                   importance = &amp;quot;impurity&amp;quot;
        ) %&amp;gt;%
        fit(Churn ~ ., data = analysis_baked)
    
    assessment_set     &amp;lt;- split %&amp;gt;% assessment()
    assessment_prepped &amp;lt;- assessment_set %&amp;gt;% recipe_simple()
    assessment_baked   &amp;lt;- assessment_prepped %&amp;gt;% bake(new_data = assessment_set)
    
    tibble(
        &amp;quot;id&amp;quot; = id,
        &amp;quot;truth&amp;quot; = assessment_baked$Churn,
        &amp;quot;prediction&amp;quot; = model_rf %&amp;gt;%
            predict(new_data = assessment_baked) %&amp;gt;%
            unlist()
    )
    
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;modeling-with-purrr&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Modeling with purrr&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pred_rf &amp;lt;- map2_df(
    .x = cross_val_tbl$splits,
    .y = cross_val_tbl$id,
    ~ rf_fun(split = .x, id = .y, try = 3, tree = 200)
)

head(pred_rf)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 3
##   id     truth prediction
##   &amp;lt;chr&amp;gt;  &amp;lt;fct&amp;gt; &amp;lt;fct&amp;gt;     
## 1 Fold01 No    No        
## 2 Fold01 No    No        
## 3 Fold01 Yes   No        
## 4 Fold01 No    No        
## 5 Fold01 No    No        
## 6 Fold01 No    No&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;assess-performance-1&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Assess Performance&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pred_rf %&amp;gt;%
    conf_mat(truth, prediction) %&amp;gt;%
    summary() %&amp;gt;%
    select(-.estimator) %&amp;gt;%
    filter(.metric %in% c(&amp;quot;accuracy&amp;quot;, &amp;quot;precision&amp;quot;, &amp;quot;recall&amp;quot;, &amp;quot;f_meas&amp;quot;)) %&amp;gt;%
    kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
.metric
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
.estimate
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
accuracy
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.7964806
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
precision
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.8320035
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
recall
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.9065443
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
f_meas
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.8676760
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Tidymodels: tidy machine learning in R</title>
      <link>/post/tidymodels-tidy-machine-learning-in-r/</link>
      <pubDate>Sun, 26 Apr 2020 00:00:00 +0000</pubDate>
      <guid>/post/tidymodels-tidy-machine-learning-in-r/</guid>
      <description>


&lt;div id=&#34;setup&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Setup&lt;/h2&gt;
&lt;/div&gt;
&lt;div id=&#34;function&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;function&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x_to_na &amp;lt;- function (s, x = 0)
{
    sapply(s, function(y)
        ifelse(y %in% x, NA, y))
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;what-is-tidymodels&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;What is tidymodels&lt;/h2&gt;
&lt;p&gt;Much like the tidyverse consists of many core packages, such as ggplot2 and dplyr, tidymodels also consists of several core packages, including&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;rsample&lt;/code&gt;: for sample splitting (e.g. train/test or cross-validation)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;recipes&lt;/code&gt;: for pre-processing&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;parsnip&lt;/code&gt;: for specifying the model&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;yardstick&lt;/code&gt;: for evaluating the model&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We will also be using the &lt;code&gt;tune&lt;/code&gt; package (for parameter tuning procedure) and the &lt;code&gt;workflows&lt;/code&gt; package (for putting everything together) that I had thought were a part of CRAN’s tidymodels package bundle, but apparently they aren’t. These will need to be loaded separately for now.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;getting-set-up&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Getting set up&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# load the relevant tidymodels libraries
library(tidymodels)
library(tidyverse)
library(workflows)
library(tune)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;load-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Load Data&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# load the Pima Indians dataset from the mlbench dataset
library(mlbench)
data(PimaIndiansDiabetes)
# rename dataset to have shorter name because lazy
df &amp;lt;- PimaIndiansDiabetes
head(df)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   pregnant glucose pressure triceps insulin mass pedigree age diabetes
## 1        6     148       72      35       0 33.6    0.627  50      pos
## 2        1      85       66      29       0 26.6    0.351  31      neg
## 3        8     183       64       0       0 23.3    0.672  32      pos
## 4        1      89       66      23      94 28.1    0.167  21      neg
## 5        0     137       40      35     168 43.1    2.288  33      pos
## 6        5     116       74       0       0 25.6    0.201  30      neg&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;eda&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;EDA&lt;/h2&gt;
&lt;div id=&#34;skim&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;skim&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;skimr::skim(df)&lt;/code&gt;&lt;/pre&gt;
&lt;table style=&#39;width: auto;&#39;
        class=&#39;table table-condensed&#39;&gt;
&lt;caption&gt;
&lt;span id=&#34;tab:unnamed-chunk-4&#34;&gt;Table 1: &lt;/span&gt;Data summary
&lt;/caption&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Name
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
df
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Number of rows
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
768
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Number of columns
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
9
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
_______________________
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Column type frequency:
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
factor
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
1
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
numeric
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
8
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
________________________
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Group variables
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
None
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Variable type: factor&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
skim_variable
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
n_missing
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
complete_rate
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
ordered
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
n_unique
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
top_counts
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
diabetes
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FALSE
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
neg: 500, pos: 268
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Variable type: numeric&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
skim_variable
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
n_missing
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
complete_rate
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
mean
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
sd
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
p0
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
p25
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
p50
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
p75
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
p100
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
hist
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
pregnant
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.85
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.37
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.00
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.00
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.00
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6.00
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
17.00
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
▇▃▂▁▁
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
glucose
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
120.89
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
31.97
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.00
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
99.00
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
117.00
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
140.25
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
199.00
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
▁▁▇▆▂
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
pressure
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
69.11
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
19.36
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.00
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
62.00
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
72.00
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
80.00
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
122.00
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
▁▁▇▇▁
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
triceps
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
20.54
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
15.95
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.00
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.00
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
23.00
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
32.00
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
99.00
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
▇▇▂▁▁
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
insulin
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
79.80
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
115.24
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.00
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.00
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
30.50
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
127.25
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
846.00
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
▇▁▁▁▁
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
mass
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
31.99
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7.88
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.00
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
27.30
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
32.00
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
36.60
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
67.10
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
▁▃▇▂▁
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
pedigree
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.47
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.33
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.08
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.24
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.37
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.63
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2.42
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
▇▃▁▁▁
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
age
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
33.24
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
11.76
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
21.00
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
24.00
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
29.00
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
41.00
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
81.00
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
▇▃▁▁▁
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;distribution&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;distribution&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df %&amp;gt;%
    janitor::clean_names() %&amp;gt;%
    set_names(colnames(.) %&amp;gt;%
                  str_replace_all(., &amp;quot;_&amp;quot;, &amp;quot; &amp;quot;) %&amp;gt;%
                  str_to_title()) %&amp;gt;%
    select_if(is.numeric) %&amp;gt;%
    gather() %&amp;gt;%
    ggplot(aes(x = value)) +
    facet_wrap(~ key, scales = &amp;quot;free&amp;quot;, ncol = 4) +
    geom_histogram()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-04-26-tidymodels-tidy-machine-learning-in-r_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;70%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df %&amp;gt;%
    janitor::clean_names() %&amp;gt;%
    set_names(colnames(.) %&amp;gt;%
                  str_replace_all(., &amp;quot;_&amp;quot;, &amp;quot; &amp;quot;) %&amp;gt;%
                  str_to_title()) %&amp;gt;%
    select_if(is.factor) %&amp;gt;%
    gather() %&amp;gt;%
    ggplot(aes(x = value)) +
    geom_bar()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-04-26-tidymodels-tidy-machine-learning-in-r_files/figure-html/unnamed-chunk-5-2.png&#34; width=&#34;70%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;replace-na&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;replace NA&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# df_clean &amp;lt;- df %&amp;gt;%
#   mutate_at(vars(triceps, glucose, pressure, insulin, mass),
#             function(.var) {
#               if_else(condition = (.var == 0), # if true (i.e. the entry is 0)
#                       true = as.numeric(NA),  # replace the value with NA
#                       false = .var # otherwise leave it as it is
#                       )
#             })

df_clean &amp;lt;- df %&amp;gt;%
  mutate_at(vars(triceps, glucose, pressure, insulin, mass), ~ x_to_na(.x))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;split-into-traintest&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Split into train/test&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(234589)
# split the data into trainng (75%) and testing (25%)
set.seed(seed = 1972) 

train_test_split &amp;lt;-
    rsample::initial_split(
        data = df_clean,     
        prop = 3/4 
    ) 

train_test_split&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;lt;576/192/768&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;train_tbl &amp;lt;- train_test_split %&amp;gt;% training() 
test_tbl  &amp;lt;- train_test_split %&amp;gt;% testing() &lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;cv-fold&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;cv-fold&lt;/h3&gt;
&lt;p&gt;At some point we’re going to want to do some parameter tuning, and to do that we’re going to want to use cross-validation. So we can create a cross-validated version of the training set in preparation for that moment using vfold_cv().&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# create CV object from training data
train_cv &amp;lt;- vfold_cv(train_tbl)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;define-a-recipe&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Define a recipe&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# define the recipe function
recipe_simple &amp;lt;- function(data) {
  # which consists of the formula (outcome ~ predictors)
  recipe(diabetes ~ pregnant + glucose + pressure + triceps +
           insulin + mass + pedigree + age,
         data = data) %&amp;gt;%
    # and some pre-processing steps
    step_normalize(all_numeric()) %&amp;gt;%
    step_knnimpute(all_predictors()) %&amp;gt;% 
    prep(data = data)
}

recipe_prepped &amp;lt;- recipe_simple(data = df_clean)

train_baked &amp;lt;- bake(recipe_prepped, new_data = train_tbl)
test_baked  &amp;lt;- bake(recipe_prepped, new_data = test_tbl)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;specify-the-model&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Specify the model&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Parsnip offers a unified interface for the massive variety of models that exist in R.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;The &lt;strong&gt;model type&lt;/strong&gt;: what kind of model you want to fit, set using a different function depending on the model, such as &lt;code&gt;rand_forest()&lt;/code&gt; for random forest, &lt;code&gt;logistic_reg()&lt;/code&gt; for logistic regression, &lt;code&gt;svm_poly()&lt;/code&gt; for a polynomial SVM model etc. The full list of models available via parsnip can be found &lt;a href=&#34;https://tidymodels.github.io/parsnip/articles/articles/Models.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The &lt;strong&gt;arguments&lt;/strong&gt;: the model parameter values (now consistently named across different models), set using &lt;code&gt;set_args()&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The &lt;strong&gt;engine&lt;/strong&gt;: the underlying package the model should come from (e.g. “ranger” for the ranger implementation of Random Forest), set using &lt;code&gt;set_engine()&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The &lt;strong&gt;mode&lt;/strong&gt;: the type of prediction - since several packages can do both classification (binary/categorical prediction) and regression (continuous prediction), set using &lt;code&gt;set_mode()&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div id=&#34;rf&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;RF&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 this code doesn’t actually fit the model. Like the recipe, it just outlines a description of the model.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;setting a parameter to tune() means that it will be tuned later in the tune stage of the pipeline. You could also just specify a particular value of the parameter if you don’t want to tune it e.g. using set_args(mtry = 4).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rf_model &amp;lt;- 
  # specify that the model is a random forest
  rand_forest() %&amp;gt;%
  # specify that the `mtry` parameter needs to be tuned
  set_args(mtry = tune()) %&amp;gt;%
  # select the engine/package that underlies the model
  set_engine(&amp;quot;ranger&amp;quot;) %&amp;gt;%
  # choose either the continuous regression or binary classification mode
  set_mode(&amp;quot;classification&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;put-it-all-together-in-a-workflow&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Put it all together in a workflow&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# set the workflow
rf_workflow &amp;lt;- workflow() %&amp;gt;%
  # add the recipe
  add_recipe(recipe_prepped) %&amp;gt;%
  # add the model
  add_model(rf_model)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;tune-the-parameters&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Tune the parameters&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;📌 You can tune multiple parameters at once by providing multiple parameters to the expand.grid() function, e.g. expand.grid(mtry = c(3, 4, 5), trees = c(100, 500)).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# specify which values eant to try
rf_grid &amp;lt;- expand.grid(mtry = c(3, 4, 5))
# extract results
rf_tune_results &amp;lt;- 
  rf_workflow %&amp;gt;%
  tune_grid(resamples = train_cv, #CV object
            grid = rf_grid, # grid of values to try
            metrics = metric_set(accuracy, roc_auc) # metrics we care about
            )

# print results
rf_tune_results %&amp;gt;%
  collect_metrics()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 6
##    mtry .metric  .estimator  mean     n std_err
##   &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt;      &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;   &amp;lt;dbl&amp;gt;
## 1     3 accuracy binary     0.759    10  0.0216
## 2     3 roc_auc  binary     0.843    10  0.0160
## 3     4 accuracy binary     0.759    10  0.0211
## 4     4 roc_auc  binary     0.841    10  0.0163
## 5     5 accuracy binary     0.764    10  0.0200
## 6     5 roc_auc  binary     0.841    10  0.0155&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;finalize-the-workflow&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Finalize the workflow&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;param_final &amp;lt;- 
  rf_tune_results %&amp;gt;%
  select_best(metric = &amp;quot;accuracy&amp;quot;, maximize = TRUE)
param_final&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 1 x 1
##    mtry
##   &amp;lt;dbl&amp;gt;
## 1     5&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# add this parameter to the workflow using the finalize_workflow() function.
rf_workflow &amp;lt;- 
  rf_workflow %&amp;gt;%
  finalize_workflow(param_final)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;fit-the-final-model&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Fit the final model&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rf_fit &amp;lt;- rf_workflow %&amp;gt;%
  # fit on entire training set and evaluate on test set
  last_fit(train_test_split)

rf_fit&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # # Monte Carlo cross-validation (0.75/0.25) with 1 resamples  
## # A tibble: 1 x 6
##   splits        id           .metrics      .notes      .predictions    .workflow
##   &amp;lt;list&amp;gt;        &amp;lt;chr&amp;gt;        &amp;lt;list&amp;gt;        &amp;lt;list&amp;gt;      &amp;lt;list&amp;gt;          &amp;lt;list&amp;gt;   
## 1 &amp;lt;split [576/… train/test … &amp;lt;tibble [2 ×… &amp;lt;tibble [0… &amp;lt;tibble [192 ×… &amp;lt;workflo…&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;evaluate-the-model-on-the-test-set&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Evaluate the model on the test set&lt;/h2&gt;
&lt;div id=&#34;performance&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;performance&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;test_performance &amp;lt;- rf_fit %&amp;gt;% collect_metrics()
test_performance&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 2 x 3
##   .metric  .estimator .estimate
##   &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;
## 1 accuracy binary         0.755
## 2 roc_auc  binary         0.829&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;predict&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;predict&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# generate predictions from the test set
test_predictions &amp;lt;- rf_fit %&amp;gt;% collect_predictions()
test_predictions&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 192 x 6
##    id               .pred_neg .pred_pos  .row .pred_class diabetes
##    &amp;lt;chr&amp;gt;                &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt; &amp;lt;fct&amp;gt;       &amp;lt;fct&amp;gt;   
##  1 train/test split     0.249    0.751      1 pos         pos     
##  2 train/test split     0.292    0.708      3 pos         pos     
##  3 train/test split     0.402    0.598      5 pos         pos     
##  4 train/test split     0.587    0.413     10 neg         pos     
##  5 train/test split     0.428    0.572     14 pos         pos     
##  6 train/test split     0.785    0.215     19 neg         neg     
##  7 train/test split     0.417    0.583     25 pos         pos     
##  8 train/test split     0.203    0.797     32 pos         pos     
##  9 train/test split     0.973    0.0272    34 neg         neg     
## 10 train/test split     0.277    0.723     37 pos         neg     
## # … with 182 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# test_predictions &amp;lt;- rf_fit %&amp;gt;% pull(.predictions)
# test_predictions&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;confusion-matrix&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;confusion matrix&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# generate a confusion matrix
test_predictions %&amp;gt;% 
  conf_mat(truth = diabetes, estimate = .pred_class)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##           Truth
## Prediction neg pos
##        neg 104  25
##        pos  22  41&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;test_predictions %&amp;gt;%
  ggplot() +
  geom_density(aes(x = .pred_pos, fill = diabetes), 
               alpha = 0.5)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-04-26-tidymodels-tidy-machine-learning-in-r_files/figure-html/unnamed-chunk-17-1.png&#34; width=&#34;70%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>R square and Q square , what the difference</title>
      <link>/post/r-square-and-q-square-what-the-difference/</link>
      <pubDate>Sat, 18 Apr 2020 00:00:00 +0000</pubDate>
      <guid>/post/r-square-and-q-square-what-the-difference/</guid>
      <description>


&lt;div id=&#34;r-square-和-q-square&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;R square 和 Q square&lt;/h2&gt;
&lt;p&gt;其实他们的计算方式是一模一样的, 只是一个是在训练数据集上算的结果, 一个是在测试集上的计算结果.&lt;/p&gt;
&lt;p&gt;R2 和 Q2 相差太多的话则说明回归的模型有过拟合&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{array}{l}R^{2}=1-R S S / T S S \\ R S S=\sum(y-\hat{\mathbf{y}})^{2} \\ T S S=\sum(y-\overline{\mathbf{y}})^{2}\end{array}
\]&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Q2 is the R2 when the PLS built on a training set is applied to a test set. So a good value for Q2 is a value that is close to the R2. That means that your PLS model works independently of the specific data that was used to train the PLS model. Adding more variables always makes R2 go up, but might not make Q2 go up.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;As I have seen that the “Difference between R2 and Q2 should not be more than 0.3” [International Journal of Drug Design and Discovery, 2011, 2 (3) 511-519].&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>sklearn classification </title>
      <link>/post/sklearn-classification/</link>
      <pubDate>Mon, 06 Apr 2020 00:00:00 +0000</pubDate>
      <guid>/post/sklearn-classification/</guid>
      <description>


&lt;div id=&#34;set-environment&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;set environment&lt;/h1&gt;
&lt;/div&gt;
&lt;div id=&#34;links&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;links&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/dformoso/sklearn-classification&#34;&gt;dformoso/sklearn-classification: Data Science Notebook on a Classification Task, using sklearn and Tensorflow.&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/dformoso/sklearn-classification&#34;&gt;dformoso/sklearn-classification: Data Science Notebook on a Classification Task, using sklearn and Tensorflow.&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Balance Accuracy and MCC</title>
      <link>/post/balance-accuracy-and-mcc/</link>
      <pubDate>Tue, 31 Mar 2020 00:00:00 +0000</pubDate>
      <guid>/post/balance-accuracy-and-mcc/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;balanced-accuracy&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Balanced accuracy&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Accuracy is the proportion of the data that are predicted correctly.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Balanced accuracy is computed here as the average of sens() and spec()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\mathrm{BA}=\frac{0.5 \mathrm{TP}}{\mathrm{TP}+\mathrm{FN}}+\frac{0.5 \mathrm{TN}}{\mathrm{TN}+\mathrm{FP}}\]&lt;/span&gt;&lt;/p&gt;
&lt;div id=&#34;multiclass&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Multiclass&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Macro, micro, and macro-weighted averaging is available for this metric.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(dplyr)
data(hpc_cv)

hpc_cv %&amp;gt;%
  count(obs, sort = TRUE) %&amp;gt;%
  kable(&amp;quot;html&amp;quot;) %&amp;gt;%
  kable_styling(&amp;quot;hover&amp;quot;, full_width = F)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-hover&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
obs
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
n
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
VF
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1769
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
F
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1078
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
M
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
412
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
L
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
208
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;hpc_cv %&amp;gt;%
  filter(Resample == &amp;quot;Fold01&amp;quot;) %&amp;gt;%
  #bal_accuracy(obs, pred, estimator = &amp;quot;macro&amp;quot;)
  bal_accuracy(obs, pred, estimator = &amp;quot;macro_weighted&amp;quot;) &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 1 x 3
##   .metric      .estimator     .estimate
##   &amp;lt;chr&amp;gt;        &amp;lt;chr&amp;gt;              &amp;lt;dbl&amp;gt;
## 1 bal_accuracy macro_weighted     0.771&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;  #bal_accuracy(obs, pred, estimator = &amp;quot;micro&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;multi-class-prob-sum-is-equal-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;multi-class prob sum is equal 1?&lt;/h3&gt;
&lt;p&gt;The Answer Is Yes.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;hpc_cv %&amp;gt;% 
  head(6) %&amp;gt;% 
  rowwise() %&amp;gt;% 
  mutate(prob = sum(VF, `F`, M, L)) %&amp;gt;% 
  select(prob)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Source: local data frame [6 x 1]
## Groups: &amp;lt;by row&amp;gt;
## 
## # A tibble: 6 x 1
##    prob
##   &amp;lt;dbl&amp;gt;
## 1  1   
## 2  1.00
## 3  1.00
## 4  1.00
## 5  1.00
## 6  1.&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;what-is-the-mean-of-macro-micro-and-macro-weighted-averaging&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;what is the mean of Macro, micro, and macro-weighted averaging?&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Macro-averaging&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;宏平均（Macro-averaging）是指所有类别的每一个统计指标值的算数平均值，也就是宏精确率（Macro-Precision），宏召回率（Macro-Recall），宏F值（Macro-F Score），其计算公式如下：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
P_{\text {macro}}=\frac{1}{n} \sum_{i=1}^{n} P_{i}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Micro-averaging&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;微平均（Micro-averaging）是对数据集中的每一个示例不分类别进行统计建立全局混淆矩阵，然后计算相应的指标。其计算公式如下：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
P_{\text {micro}}=\frac{T \bar{P}}{T \bar{P}+\overline{F P}}=\frac{\sum_{i=1}^{n} T P_{i}}{\sum_{i=1}^{n} T P_{i}+\sum_{i=1}^{n} F P_{i}}
\]&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Macro-averaging与Micro-averaging的不同之处在于：Macro-averaging赋予每个类相同的权重，然而Micro-averaging赋予每个样本决策相同的权重。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;summary&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;summary&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2020/03/31/ymsZY5W4XuDPA8H.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;mcc-matthews-correlation-coefficient&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;MCC: Matthews correlation coefficient&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\mathrm{MCC}=\frac{\mathrm{TP} \times \mathrm{TN}-\mathrm{FP} \times \mathrm{FN}}{\sqrt{(\mathrm{TP}+\mathrm{FP})(\mathrm{TP}+\mathrm{FN})(\mathrm{TN}+\mathrm{FP})(\mathrm{TN}+\mathrm{FN})}}
\]&lt;/span&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Multiclass
# mcc() has a natural multiclass extension
# pred is predicted class results (that is also factor)
hpc_cv %&amp;gt;%
  group_by(Resample) %&amp;gt;%
  mcc(obs, pred)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 10 x 4
##    Resample .metric .estimator .estimate
##    &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;
##  1 Fold01   mcc     multiclass     0.542
##  2 Fold02   mcc     multiclass     0.521
##  3 Fold03   mcc     multiclass     0.602
##  4 Fold04   mcc     multiclass     0.519
##  5 Fold05   mcc     multiclass     0.520
##  6 Fold06   mcc     multiclass     0.494
##  7 Fold07   mcc     multiclass     0.461
##  8 Fold08   mcc     multiclass     0.538
##  9 Fold09   mcc     multiclass     0.459
## 10 Fold10   mcc     multiclass     0.498&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;notes&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;notes&lt;/h2&gt;
&lt;p&gt;where TP means “true positives”, TN “true negatives”, FP “false positives”, and FN “false negatives”.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;links&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://tidymodels.github.io/yardstick/reference/bal_accuracy.html&#34;&gt;Balanced accuracy — bal_accuracy • yardstick&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://tidymodels.github.io/yardstick/reference/mcc.html&#34;&gt;Matthews correlation coefficient — mcc • yardstick&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Tidymodels Machine Learning Ecosystem</title>
      <link>/post/tidymodels-machine-learning-ecosystem/</link>
      <pubDate>Tue, 31 Mar 2020 00:00:00 +0000</pubDate>
      <guid>/post/tidymodels-machine-learning-ecosystem/</guid>
      <description>


&lt;div id=&#34;introduction&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;{tidyverse} ecosystem that has become the defacto standard for data importation, manipulation, and visualization in R.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;My graduate training left me with a deep understanding of linear models and design-based causal inference, but with little or no training in other types of predictive modeling, unsupervised machine learning, version control, or putting models into production.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;I chose the Applied Machine Learning workshop in order to fill the gap in my knowledge about machine learning models beyond OLS and logistic regression.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Max Kuhn and Davis Vaughn were the two workshop leaders and I knew they were in the process of developing the {tidymodels} ecosystem, which stands to be a successor to their popular {caret} package and promises fill the modeling gap in the {tidyverse} ecosystem.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;load-data&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;load data&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidymodels)
library(AmesHousing)

data &amp;lt;- make_ames()

data %&amp;gt;% 
  head() %&amp;gt;% 
  str()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Classes &amp;#39;tbl_df&amp;#39;, &amp;#39;tbl&amp;#39; and &amp;#39;data.frame&amp;#39;:    6 obs. of  81 variables:
##  $ MS_SubClass       : Factor w/ 16 levels &amp;quot;One_Story_1946_and_Newer_All_Styles&amp;quot;,..: 1 1 1 1 6 6
##  $ MS_Zoning         : Factor w/ 7 levels &amp;quot;Floating_Village_Residential&amp;quot;,..: 3 2 3 3 3 3
##  $ Lot_Frontage      : num  141 80 81 93 74 78
##  $ Lot_Area          : int  31770 11622 14267 11160 13830 9978
##  $ Street            : Factor w/ 2 levels &amp;quot;Grvl&amp;quot;,&amp;quot;Pave&amp;quot;: 2 2 2 2 2 2
##  $ Alley             : Factor w/ 3 levels &amp;quot;Gravel&amp;quot;,&amp;quot;No_Alley_Access&amp;quot;,..: 2 2 2 2 2 2
##  $ Lot_Shape         : Factor w/ 4 levels &amp;quot;Regular&amp;quot;,&amp;quot;Slightly_Irregular&amp;quot;,..: 2 1 2 1 2 2
##  $ Land_Contour      : Factor w/ 4 levels &amp;quot;Bnk&amp;quot;,&amp;quot;HLS&amp;quot;,&amp;quot;Low&amp;quot;,..: 4 4 4 4 4 4
##  $ Utilities         : Factor w/ 3 levels &amp;quot;AllPub&amp;quot;,&amp;quot;NoSeWa&amp;quot;,..: 1 1 1 1 1 1
##  $ Lot_Config        : Factor w/ 5 levels &amp;quot;Corner&amp;quot;,&amp;quot;CulDSac&amp;quot;,..: 1 5 1 1 5 5
##  $ Land_Slope        : Factor w/ 3 levels &amp;quot;Gtl&amp;quot;,&amp;quot;Mod&amp;quot;,&amp;quot;Sev&amp;quot;: 1 1 1 1 1 1
##  $ Neighborhood      : Factor w/ 28 levels &amp;quot;North_Ames&amp;quot;,&amp;quot;College_Creek&amp;quot;,..: 1 1 1 1 7 7
##  $ Condition_1       : Factor w/ 9 levels &amp;quot;Artery&amp;quot;,&amp;quot;Feedr&amp;quot;,..: 3 2 3 3 3 3
##  $ Condition_2       : Factor w/ 8 levels &amp;quot;Artery&amp;quot;,&amp;quot;Feedr&amp;quot;,..: 3 3 3 3 3 3
##  $ Bldg_Type         : Factor w/ 5 levels &amp;quot;OneFam&amp;quot;,&amp;quot;TwoFmCon&amp;quot;,..: 1 1 1 1 1 1
##  $ House_Style       : Factor w/ 8 levels &amp;quot;One_and_Half_Fin&amp;quot;,..: 3 3 3 3 8 8
##  $ Overall_Qual      : Factor w/ 10 levels &amp;quot;Very_Poor&amp;quot;,&amp;quot;Poor&amp;quot;,..: 6 5 6 7 5 6
##  $ Overall_Cond      : Factor w/ 10 levels &amp;quot;Very_Poor&amp;quot;,&amp;quot;Poor&amp;quot;,..: 5 6 6 5 5 6
##  $ Year_Built        : int  1960 1961 1958 1968 1997 1998
##  $ Year_Remod_Add    : int  1960 1961 1958 1968 1998 1998
##  $ Roof_Style        : Factor w/ 6 levels &amp;quot;Flat&amp;quot;,&amp;quot;Gable&amp;quot;,..: 4 2 4 4 2 2
##  $ Roof_Matl         : Factor w/ 8 levels &amp;quot;ClyTile&amp;quot;,&amp;quot;CompShg&amp;quot;,..: 2 2 2 2 2 2
##  $ Exterior_1st      : Factor w/ 16 levels &amp;quot;AsbShng&amp;quot;,&amp;quot;AsphShn&amp;quot;,..: 4 14 15 4 14 14
##  $ Exterior_2nd      : Factor w/ 17 levels &amp;quot;AsbShng&amp;quot;,&amp;quot;AsphShn&amp;quot;,..: 11 15 16 4 15 15
##  $ Mas_Vnr_Type      : Factor w/ 5 levels &amp;quot;BrkCmn&amp;quot;,&amp;quot;BrkFace&amp;quot;,..: 5 4 2 4 4 2
##  $ Mas_Vnr_Area      : num  112 0 108 0 0 20
##  $ Exter_Qual        : Factor w/ 4 levels &amp;quot;Excellent&amp;quot;,&amp;quot;Fair&amp;quot;,..: 4 4 4 3 4 4
##  $ Exter_Cond        : Factor w/ 5 levels &amp;quot;Excellent&amp;quot;,&amp;quot;Fair&amp;quot;,..: 5 5 5 5 5 5
##  $ Foundation        : Factor w/ 6 levels &amp;quot;BrkTil&amp;quot;,&amp;quot;CBlock&amp;quot;,..: 2 2 2 2 3 3
##  $ Bsmt_Qual         : Factor w/ 6 levels &amp;quot;Excellent&amp;quot;,&amp;quot;Fair&amp;quot;,..: 6 6 6 6 3 6
##  $ Bsmt_Cond         : Factor w/ 6 levels &amp;quot;Excellent&amp;quot;,&amp;quot;Fair&amp;quot;,..: 3 6 6 6 6 6
##  $ Bsmt_Exposure     : Factor w/ 5 levels &amp;quot;Av&amp;quot;,&amp;quot;Gd&amp;quot;,&amp;quot;Mn&amp;quot;,..: 2 4 4 4 4 4
##  $ BsmtFin_Type_1    : Factor w/ 7 levels &amp;quot;ALQ&amp;quot;,&amp;quot;BLQ&amp;quot;,&amp;quot;GLQ&amp;quot;,..: 2 6 1 1 3 3
##  $ BsmtFin_SF_1      : num  2 6 1 1 3 3
##  $ BsmtFin_Type_2    : Factor w/ 7 levels &amp;quot;ALQ&amp;quot;,&amp;quot;BLQ&amp;quot;,&amp;quot;GLQ&amp;quot;,..: 7 4 7 7 7 7
##  $ BsmtFin_SF_2      : num  0 144 0 0 0 0
##  $ Bsmt_Unf_SF       : num  441 270 406 1045 137 ...
##  $ Total_Bsmt_SF     : num  1080 882 1329 2110 928 ...
##  $ Heating           : Factor w/ 6 levels &amp;quot;Floor&amp;quot;,&amp;quot;GasA&amp;quot;,..: 2 2 2 2 2 2
##  $ Heating_QC        : Factor w/ 5 levels &amp;quot;Excellent&amp;quot;,&amp;quot;Fair&amp;quot;,..: 2 5 5 1 3 1
##  $ Central_Air       : Factor w/ 2 levels &amp;quot;N&amp;quot;,&amp;quot;Y&amp;quot;: 2 2 2 2 2 2
##  $ Electrical        : Factor w/ 6 levels &amp;quot;FuseA&amp;quot;,&amp;quot;FuseF&amp;quot;,..: 5 5 5 5 5 5
##  $ First_Flr_SF      : int  1656 896 1329 2110 928 926
##  $ Second_Flr_SF     : int  0 0 0 0 701 678
##  $ Low_Qual_Fin_SF   : int  0 0 0 0 0 0
##  $ Gr_Liv_Area       : int  1656 896 1329 2110 1629 1604
##  $ Bsmt_Full_Bath    : num  1 0 0 1 0 0
##  $ Bsmt_Half_Bath    : num  0 0 0 0 0 0
##  $ Full_Bath         : int  1 1 1 2 2 2
##  $ Half_Bath         : int  0 0 1 1 1 1
##  $ Bedroom_AbvGr     : int  3 2 3 3 3 3
##  $ Kitchen_AbvGr     : int  1 1 1 1 1 1
##  $ Kitchen_Qual      : Factor w/ 5 levels &amp;quot;Excellent&amp;quot;,&amp;quot;Fair&amp;quot;,..: 5 5 3 1 5 3
##  $ TotRms_AbvGrd     : int  7 5 6 8 6 7
##  $ Functional        : Factor w/ 8 levels &amp;quot;Maj1&amp;quot;,&amp;quot;Maj2&amp;quot;,..: 8 8 8 8 8 8
##  $ Fireplaces        : int  2 0 0 2 1 1
##  $ Fireplace_Qu      : Factor w/ 6 levels &amp;quot;Excellent&amp;quot;,&amp;quot;Fair&amp;quot;,..: 3 4 4 6 6 3
##  $ Garage_Type       : Factor w/ 7 levels &amp;quot;Attchd&amp;quot;,&amp;quot;Basment&amp;quot;,..: 1 1 1 1 1 1
##  $ Garage_Finish     : Factor w/ 4 levels &amp;quot;Fin&amp;quot;,&amp;quot;No_Garage&amp;quot;,..: 1 4 4 1 1 1
##  $ Garage_Cars       : num  2 1 1 2 2 2
##  $ Garage_Area       : num  528 730 312 522 482 470
##  $ Garage_Qual       : Factor w/ 6 levels &amp;quot;Excellent&amp;quot;,&amp;quot;Fair&amp;quot;,..: 6 6 6 6 6 6
##  $ Garage_Cond       : Factor w/ 6 levels &amp;quot;Excellent&amp;quot;,&amp;quot;Fair&amp;quot;,..: 6 6 6 6 6 6
##  $ Paved_Drive       : Factor w/ 3 levels &amp;quot;Dirt_Gravel&amp;quot;,..: 2 3 3 3 3 3
##  $ Wood_Deck_SF      : int  210 140 393 0 212 360
##  $ Open_Porch_SF     : int  62 0 36 0 34 36
##  $ Enclosed_Porch    : int  0 0 0 0 0 0
##  $ Three_season_porch: int  0 0 0 0 0 0
##  $ Screen_Porch      : int  0 120 0 0 0 0
##  $ Pool_Area         : int  0 0 0 0 0 0
##  $ Pool_QC           : Factor w/ 5 levels &amp;quot;Excellent&amp;quot;,&amp;quot;Fair&amp;quot;,..: 4 4 4 4 4 4
##  $ Fence             : Factor w/ 5 levels &amp;quot;Good_Privacy&amp;quot;,..: 5 3 5 5 3 5
##  $ Misc_Feature      : Factor w/ 6 levels &amp;quot;Elev&amp;quot;,&amp;quot;Gar2&amp;quot;,..: 3 3 2 3 3 3
##  $ Misc_Val          : int  0 0 12500 0 0 0
##  $ Mo_Sold           : int  5 6 6 4 3 6
##  $ Year_Sold         : int  2010 2010 2010 2010 2010 2010
##  $ Sale_Type         : Factor w/ 10 levels &amp;quot;COD&amp;quot;,&amp;quot;Con&amp;quot;,&amp;quot;ConLD&amp;quot;,..: 10 10 10 10 10 10
##  $ Sale_Condition    : Factor w/ 6 levels &amp;quot;Abnorml&amp;quot;,&amp;quot;AdjLand&amp;quot;,..: 5 5 5 5 5 5
##  $ Sale_Price        : int  215000 105000 172000 244000 189900 195500
##  $ Longitude         : num  -93.6 -93.6 -93.6 -93.6 -93.6 ...
##  $ Latitude          : num  42.1 42.1 42.1 42.1 42.1 ...&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;eda&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;EDA&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# data %&amp;gt;%
#     select_if(is.factor) %&amp;gt;%
#     #select(-State_Of_Origin) %&amp;gt;%
#     gather() %&amp;gt;%
#     ggplot(aes(x = value)) +
#     facet_wrap( ~ key, scales = &amp;quot;free&amp;quot;, ncol = 3) +
#     geom_bar()




# data %&amp;gt;%
#     select_if(is.numeric) %&amp;gt;%
#     gather() %&amp;gt;%
#     ggplot(aes(x = value)) +
#     facet_wrap( ~ key, scales = &amp;quot;free&amp;quot;, ncol = 4) +
#     geom_density()&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;data-type&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;data type&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# dt_new &amp;lt;- 
# dt_new %&amp;gt;% 
#   mutate(Promoted_or_Not = factor(Promoted_or_Not))

# numeric_variables &amp;lt;- c(
#   &amp;quot;total_years_dispatcher&amp;quot;, &amp;quot;total_years_present_job&amp;quot;,
#   &amp;quot;childrendependents&amp;quot;, &amp;quot;children_under_2_yrs&amp;quot;, 
#   &amp;quot;sick_days_in_last_year&amp;quot;, &amp;quot;avg_work_hrs_week&amp;quot;
# )
# 
# factor_variables &amp;lt;- setdiff(colnames(sleep), numeric_variables)
# 
# sleep &amp;lt;- mutate_at(sleep, vars(factor_variables), as.factor)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;stratified-trainingtest-splits&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Stratified training/test splits&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## Setting seed
set.seed(1)

## Generate split
data_split &amp;lt;- initial_split(data, 
                            prop = 4/5, 
                            strata = &amp;quot;Sale_Price&amp;quot;)

## Printing the function gives us &amp;lt;Num Rows in Training Set/Num Rows in Testing Set/Total Num Rows&amp;gt;
data_split&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;lt;2346/584/2930&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## Calling training() on this object will give us our training set, and calling testing() on it will give us our testing set
data_train &amp;lt;- training(data_split)
data_test &amp;lt;- testing(data_split)

data_train %&amp;gt;% 
  head() %&amp;gt;% 
  knitr::kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;MS_SubClass&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;MS_Zoning&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Lot_Frontage&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Lot_Area&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Street&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Alley&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Lot_Shape&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Land_Contour&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Utilities&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Lot_Config&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Land_Slope&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Neighborhood&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Condition_1&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Condition_2&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Bldg_Type&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;House_Style&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Overall_Qual&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Overall_Cond&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Year_Built&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Year_Remod_Add&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Roof_Style&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Roof_Matl&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Exterior_1st&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Exterior_2nd&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Mas_Vnr_Type&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Mas_Vnr_Area&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Exter_Qual&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Exter_Cond&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Foundation&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Bsmt_Qual&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Bsmt_Cond&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Bsmt_Exposure&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;BsmtFin_Type_1&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;BsmtFin_SF_1&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;BsmtFin_Type_2&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;BsmtFin_SF_2&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Bsmt_Unf_SF&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Total_Bsmt_SF&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Heating&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Heating_QC&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Central_Air&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Electrical&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;First_Flr_SF&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Second_Flr_SF&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Low_Qual_Fin_SF&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Gr_Liv_Area&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Bsmt_Full_Bath&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Bsmt_Half_Bath&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Full_Bath&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Half_Bath&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Bedroom_AbvGr&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Kitchen_AbvGr&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Kitchen_Qual&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;TotRms_AbvGrd&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Functional&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Fireplaces&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Fireplace_Qu&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Garage_Type&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Garage_Finish&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Garage_Cars&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Garage_Area&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Garage_Qual&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Garage_Cond&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Paved_Drive&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Wood_Deck_SF&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Open_Porch_SF&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Enclosed_Porch&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Three_season_porch&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Screen_Porch&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Pool_Area&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Pool_QC&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Fence&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Misc_Feature&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Misc_Val&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Mo_Sold&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Year_Sold&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Sale_Type&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Sale_Condition&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Sale_Price&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Longitude&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Latitude&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;One_Story_1946_and_Newer_All_Styles&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Residential_Low_Density&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;141&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;31770&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Pave&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;No_Alley_Access&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Slightly_Irregular&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Lvl&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AllPub&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Corner&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Gtl&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;North_Ames&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Norm&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Norm&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;OneFam&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;One_Story&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Above_Average&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Average&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1960&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1960&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Hip&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CompShg&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;BrkFace&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Plywood&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Stone&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;112&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Typical&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Typical&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CBlock&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Typical&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Good&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Gd&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;BLQ&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Unf&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;441&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1080&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;GasA&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Fair&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Y&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;SBrkr&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1656&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1656&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Typical&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Typ&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Good&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Attchd&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Fin&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;528&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Typical&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Typical&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Partial_Pavement&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;210&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;62&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;No_Pool&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;No_Fence&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;None&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2010&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;WD&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Normal&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;215000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-93.61975&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;42.05403&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;One_Story_1946_and_Newer_All_Styles&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Residential_High_Density&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;80&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;11622&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Pave&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;No_Alley_Access&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Regular&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Lvl&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AllPub&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Inside&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Gtl&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;North_Ames&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Feedr&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Norm&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;OneFam&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;One_Story&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Average&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Above_Average&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1961&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1961&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Gable&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CompShg&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;VinylSd&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;VinylSd&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;None&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Typical&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Typical&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CBlock&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Typical&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Typical&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;No&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Rec&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;LwQ&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;144&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;270&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;882&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;GasA&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Typical&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Y&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;SBrkr&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;896&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;896&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Typical&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Typ&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;No_Fireplace&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Attchd&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Unf&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;730&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Typical&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Typical&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Paved&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;140&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;120&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;No_Pool&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Minimum_Privacy&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;None&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2010&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;WD&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Normal&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;105000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-93.61976&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;42.05301&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;One_Story_1946_and_Newer_All_Styles&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Residential_Low_Density&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;81&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;14267&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Pave&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;No_Alley_Access&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Slightly_Irregular&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Lvl&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AllPub&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Corner&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Gtl&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;North_Ames&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Norm&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Norm&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;OneFam&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;One_Story&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Above_Average&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Above_Average&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1958&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1958&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Hip&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CompShg&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Wd Sdng&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Wd Sdng&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;BrkFace&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;108&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Typical&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Typical&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CBlock&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Typical&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Typical&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;No&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ALQ&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Unf&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;406&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1329&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;GasA&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Typical&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Y&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;SBrkr&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1329&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1329&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Good&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Typ&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;No_Fireplace&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Attchd&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Unf&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;312&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Typical&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Typical&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Paved&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;393&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;36&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;No_Pool&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;No_Fence&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Gar2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12500&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2010&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;WD&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Normal&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;172000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-93.61939&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;42.05266&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Two_Story_1946_and_Newer&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Residential_Low_Density&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;74&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;13830&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Pave&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;No_Alley_Access&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Slightly_Irregular&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Lvl&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AllPub&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Inside&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Gtl&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Gilbert&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Norm&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Norm&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;OneFam&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Two_Story&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Average&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Average&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1997&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1998&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Gable&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CompShg&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;VinylSd&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;VinylSd&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;None&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Typical&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Typical&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;PConc&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Good&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Typical&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;No&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;GLQ&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Unf&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;137&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;928&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;GasA&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Good&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Y&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;SBrkr&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;928&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;701&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1629&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Typical&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Typ&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Typical&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Attchd&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Fin&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;482&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Typical&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Typical&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Paved&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;212&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;34&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;No_Pool&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Minimum_Privacy&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;None&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2010&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;WD&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Normal&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;189900&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-93.63893&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;42.06090&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Two_Story_1946_and_Newer&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Residential_Low_Density&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;78&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;9978&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Pave&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;No_Alley_Access&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Slightly_Irregular&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Lvl&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AllPub&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Inside&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Gtl&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Gilbert&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Norm&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Norm&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;OneFam&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Two_Story&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Above_Average&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Above_Average&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1998&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1998&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Gable&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CompShg&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;VinylSd&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;VinylSd&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;BrkFace&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;20&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Typical&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Typical&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;PConc&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Typical&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Typical&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;No&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;GLQ&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Unf&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;324&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;926&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;GasA&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Excellent&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Y&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;SBrkr&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;926&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;678&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1604&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Good&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Typ&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Good&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Attchd&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Fin&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;470&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Typical&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Typical&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Paved&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;360&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;36&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;No_Pool&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;No_Fence&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;None&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2010&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;WD&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Normal&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;195500&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-93.63893&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;42.06078&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;One_Story_PUD_1946_and_Newer&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Residential_Low_Density&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;41&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4920&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Pave&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;No_Alley_Access&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Regular&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Lvl&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AllPub&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Inside&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Gtl&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Stone_Brook&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Norm&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Norm&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;TwnhsE&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;One_Story&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Very_Good&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Average&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2001&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2001&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Gable&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CompShg&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CemntBd&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CmentBd&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;None&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Good&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Typical&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;PConc&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Good&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Typical&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Mn&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;GLQ&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Unf&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;722&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1338&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;GasA&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Excellent&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Y&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;SBrkr&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1338&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1338&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Good&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Typ&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;No_Fireplace&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Attchd&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Fin&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;582&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Typical&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Typical&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Paved&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;170&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;No_Pool&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;No_Fence&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;None&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2010&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;WD&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Normal&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;213500&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-93.63379&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;42.06298&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;data-pre-processing&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Data pre-processing&lt;/h1&gt;
&lt;div id=&#34;recipe&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;recipe&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data_rec &amp;lt;- recipe(
  Sale_Price ~ .,
  data = data_train
) %&amp;gt;% 
  step_log(Sale_Price, base = 10) %&amp;gt;%
  step_rm(matches(&amp;quot;Qual&amp;quot;), matches(&amp;quot;Cond&amp;quot;)) %&amp;gt;% # Remove unwanted variables 
  step_dummy(all_nominal()) %&amp;gt;% 
  #step_downsample(Promoted_or_Not) %&amp;gt;% 
  step_center(all_predictors()) %&amp;gt;% 
  step_scale(all_predictors()) %&amp;gt;% 
  step_pca(contains(&amp;quot;SF&amp;quot;), contains(&amp;quot;Area&amp;quot;), threshold = .75) %&amp;gt;% #will convert numeric data into one or more principal components.
  step_nzv(all_predictors()) # 👍 #

data_rec&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Data Recipe
## 
## Inputs:
## 
##       role #variables
##    outcome          1
##  predictor         80
## 
## Operations:
## 
## Log transformation on Sale_Price
## Delete terms matches, Qual, matches, Cond
## Dummy variables from all_nominal
## Centering for all_predictors
## Scaling for all_predictors
## No PCA components were extracted.
## Sparse, unbalanced variable filter on all_predictors&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;prep&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;prep&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data_rec_trained &amp;lt;- prep(data_rec, training = data_train, verbose = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## oper 1 step log [training] 
## oper 2 step rm [training] 
## oper 3 step dummy [training] 
## oper 4 step center [training] 
## oper 5 step scale [training] 
## oper 6 step pca [training] 
## oper 7 step nzv [training] 
## The retained training set is ~ 1.57 Mb  in memory.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data_rec_trained&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Data Recipe
## 
## Inputs:
## 
##       role #variables
##    outcome          1
##  predictor         80
## 
## Training data contained 2346 data points and no missing data.
## 
## Operations:
## 
## Log transformation on Sale_Price [trained]
## Variables removed Overall_Qual, Exter_Qual, Bsmt_Qual, ... [trained]
## Dummy variables from MS_SubClass, MS_Zoning, Street, Alley, ... [trained]
## Centering for Lot_Frontage, Lot_Area, ... [trained]
## Scaling for Lot_Frontage, Lot_Area, ... [trained]
## PCA extraction with BsmtFin_SF_1, BsmtFin_SF_2, ... [trained]
## Sparse, unbalanced variable filter removed Kitchen_AbvGr, ... [trained]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;juice&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;juice&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Not bad, we’ve reduced 13 variables down to 7. This probably wasn’t the best use case of PCA, but it provides a good example of some advanced preprocessing made simple in {recipes}.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data_rec_trained %&amp;gt;% 
  juice() %&amp;gt;% 
  select(starts_with(&amp;quot;PC&amp;quot;)) # select principal component&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 2,346 x 7
##        PC1    PC2     PC3     PC4    PC5     PC6     PC7
##      &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;
##  1 -1.63    1.16   0.650  -0.440  -0.264 -0.601  -2.05  
##  2  0.874   0.305  0.311  -0.656  -0.345 -0.475   0.143 
##  3 -0.613   1.57   0.0386 -0.106  -0.610 -1.44   -0.0504
##  4  0.381   0.953  0.421   0.341  -0.105 -0.989  -0.548 
##  5  0.166   0.957  0.363   0.458  -0.486 -1.57    0.0933
##  6 -0.0448 -0.268 -0.665  -0.337  -0.121  0.258   0.389 
##  7 -0.174  -0.249 -0.612   0.215   0.607  0.664   0.287 
##  8 -1.61    0.459 -0.0692  0.765   0.622  0.0958  0.471 
##  9  0.0192 -1.53   0.449   0.0537 -0.312 -0.149   0.251 
## 10 -0.0231  1.90   0.0478  0.197  -0.799 -1.95    0.531 
## # … with 2,336 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;modeling&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Modeling&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;The beauty of {parsnip} is that it unifies the interface for model specifications so that you don’t need to remember dozens of different interfaces for each implementation of a model.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div id=&#34;lasso&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;lasso&lt;/h2&gt;
&lt;p&gt;Now let’s specify our model. We’re going to go with a Lasso model with a penalty of 0.001 using the {parsnip} package.&lt;/p&gt;
&lt;div id=&#34;model&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;model&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data_lasso &amp;lt;- linear_reg(penalty = 0.001, mixture = 1) %&amp;gt;% 
  set_engine(&amp;quot;glmnet&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;workflow&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;workflow&lt;/h3&gt;
&lt;p&gt;Using workflows, we don’t need to go through the prep() and juice() steps we went through earlier when we go to fit our model (I demonstrated prep() and juice() as they can be useful for being able to inspect your pre-processed data as we did earlier).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data_lasso_wfl &amp;lt;- workflow() %&amp;gt;% 
  add_recipe(data_rec) %&amp;gt;% #recipe
  add_model(data_lasso) # model

data_lasso_wfl&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ══ Workflow ═══════════════════════════════════════════════════════
## Preprocessor: Recipe
## Model: linear_reg()
## 
## ── Preprocessor ───────────────────────────────────────────────────
## 7 Recipe Steps
## 
## ● step_log()
## ● step_rm()
## ● step_dummy()
## ● step_center()
## ● step_scale()
## ● step_pca()
## ● step_nzv()
## 
## ── Model ──────────────────────────────────────────────────────────
## Linear Regression Model Specification (regression)
## 
## Main Arguments:
##   penalty = 0.001
##   mixture = 1
## 
## Computational engine: glmnet&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;fit-model&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;fit model&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data_lasso_fit &amp;lt;- fit(data_lasso_wfl, data_train)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;predict&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;predict&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;predict(data_lasso_fit, data_train) %&amp;gt;% 
    slice(1:5)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 5 x 1
##   .pred
##   &amp;lt;dbl&amp;gt;
## 1  5.32
## 2  5.04
## 3  5.17
## 4  5.30
## 5  5.31&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;model-evaluation&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Model evaluation&lt;/h1&gt;
&lt;p&gt;using metrics from the {yardstick} package&lt;/p&gt;
&lt;p&gt;metrics:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Root Mean Squared Error (RMSE)&lt;/li&gt;
&lt;li&gt;R squared&lt;/li&gt;
&lt;li&gt;the concordance correlation coefficient (ccc)&lt;/li&gt;
&lt;/ol&gt;
&lt;div id=&#34;all-in-sample&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;all in sample&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;perf_metrics &amp;lt;- metric_set(rmse, rsq, ccc)

perf_lasso &amp;lt;- data_lasso_fit %&amp;gt;% 
  predict(data_train) %&amp;gt;% 
  bind_cols(juice(data_rec_trained)) %&amp;gt;% 
  perf_metrics(truth = Sale_Price, estimate = .pred)

perf_lasso %&amp;gt;% 
  arrange(.metric)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 3
##   .metric .estimator .estimate
##   &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;
## 1 ccc     standard      0.925 
## 2 rmse    standard      0.0648
## 3 rsq     standard      0.864&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;cross-validation&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;cross-validation&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# create 10-fold cross-validation sets for evaluating our training set models using vfold_cv(), which defaults to creating 10 folds.
cv_splits &amp;lt;- vfold_cv(data_train)
cv_splits&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## #  10-fold cross-validation 
## # A tibble: 10 x 2
##    splits             id    
##    &amp;lt;named list&amp;gt;       &amp;lt;chr&amp;gt; 
##  1 &amp;lt;split [2.1K/235]&amp;gt; Fold01
##  2 &amp;lt;split [2.1K/235]&amp;gt; Fold02
##  3 &amp;lt;split [2.1K/235]&amp;gt; Fold03
##  4 &amp;lt;split [2.1K/235]&amp;gt; Fold04
##  5 &amp;lt;split [2.1K/235]&amp;gt; Fold05
##  6 &amp;lt;split [2.1K/235]&amp;gt; Fold06
##  7 &amp;lt;split [2.1K/234]&amp;gt; Fold07
##  8 &amp;lt;split [2.1K/234]&amp;gt; Fold08
##  9 &amp;lt;split [2.1K/234]&amp;gt; Fold09
## 10 &amp;lt;split [2.1K/234]&amp;gt; Fold10&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# take our workflow and use it to fit 10 models on these 10 splits using the fit_resamples() function from the {tune} package (also a part of the tidymodels ecosystem), as well as tell it to compute the performance metrics we set earlier.

cv_eval &amp;lt;- fit_resamples(data_lasso_wfl, resamples = cv_splits, metrics = perf_metrics)
cv_eval&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## #  10-fold cross-validation 
## # A tibble: 10 x 4
##    splits             id     .metrics         .notes          
##  * &amp;lt;list&amp;gt;             &amp;lt;chr&amp;gt;  &amp;lt;list&amp;gt;           &amp;lt;list&amp;gt;          
##  1 &amp;lt;split [2.1K/235]&amp;gt; Fold01 &amp;lt;tibble [3 × 3]&amp;gt; &amp;lt;tibble [0 × 1]&amp;gt;
##  2 &amp;lt;split [2.1K/235]&amp;gt; Fold02 &amp;lt;tibble [3 × 3]&amp;gt; &amp;lt;tibble [0 × 1]&amp;gt;
##  3 &amp;lt;split [2.1K/235]&amp;gt; Fold03 &amp;lt;tibble [3 × 3]&amp;gt; &amp;lt;tibble [0 × 1]&amp;gt;
##  4 &amp;lt;split [2.1K/235]&amp;gt; Fold04 &amp;lt;tibble [3 × 3]&amp;gt; &amp;lt;tibble [0 × 1]&amp;gt;
##  5 &amp;lt;split [2.1K/235]&amp;gt; Fold05 &amp;lt;tibble [3 × 3]&amp;gt; &amp;lt;tibble [0 × 1]&amp;gt;
##  6 &amp;lt;split [2.1K/235]&amp;gt; Fold06 &amp;lt;tibble [3 × 3]&amp;gt; &amp;lt;tibble [0 × 1]&amp;gt;
##  7 &amp;lt;split [2.1K/234]&amp;gt; Fold07 &amp;lt;tibble [3 × 3]&amp;gt; &amp;lt;tibble [0 × 1]&amp;gt;
##  8 &amp;lt;split [2.1K/234]&amp;gt; Fold08 &amp;lt;tibble [3 × 3]&amp;gt; &amp;lt;tibble [0 × 1]&amp;gt;
##  9 &amp;lt;split [2.1K/234]&amp;gt; Fold09 &amp;lt;tibble [3 × 3]&amp;gt; &amp;lt;tibble [0 × 1]&amp;gt;
## 10 &amp;lt;split [2.1K/234]&amp;gt; Fold10 &amp;lt;tibble [3 × 3]&amp;gt; &amp;lt;tibble [0 × 1]&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;collect_metrics(cv_eval)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 5
##   .metric .estimator   mean     n std_err
##   &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;       &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;   &amp;lt;dbl&amp;gt;
## 1 ccc     standard   0.915     10 0.00660
## 2 rmse    standard   0.0673    10 0.00345
## 3 rsq     standard   0.854     10 0.0122&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;in-sample-vs-cross-validation&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;in-sample VS cross-validation&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;perf_lasso %&amp;gt;% 
  arrange(.metric)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 3
##   .metric .estimator .estimate
##   &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;
## 1 ccc     standard      0.925 
## 2 rmse    standard      0.0648
## 3 rsq     standard      0.864&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;collect_metrics(cv_eval)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 5
##   .metric .estimator   mean     n std_err
##   &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;       &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;   &amp;lt;dbl&amp;gt;
## 1 ccc     standard   0.915     10 0.00660
## 2 rmse    standard   0.0673    10 0.00345
## 3 rsq     standard   0.854     10 0.0122&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;model-tuning&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Model tuning&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;its real power comes in allowing us to easily tune the hyperparameters in our model.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div id=&#34;tuning-lasso&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;📌 tuning lasso&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data_mixture &amp;lt;- linear_reg(penalty = tune(), mixture = tune()) %&amp;gt;% 
  set_engine(&amp;quot;glmnet&amp;quot;)

data_mixture_wfl &amp;lt;- update_model(data_lasso_wfl, data_mixture)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;set-regular-paraments-for-grid-search&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;set regular paraments for grid search&lt;/h2&gt;
&lt;p&gt;Next, we will define a parameter space to search. {tune} allows you to perform either grid search (where the candidate values are pre-defined) or iterative search (ex: Bayesian optimization) where the results of the previous model are used to select the next parameter values to try.&lt;/p&gt;
&lt;p&gt;There are pros/cons to each. A big plus of grid search is that it allows you to take advantage of parallel processing to speed up your search, while iterative search is, by construction, sequential. A big plus of iterative search is that it can quickly rule out areas of parameter space which can be efficient when covering many values of a high dimensional parameter space (where a grid may require many, many models to comfortably cover the entire parameter space, where many of them may turn out to be redundant).&lt;/p&gt;
&lt;p&gt;For this post, we’re going to stick with grid search. The simplest form of grid search uses regular grids, where you provide a vector of values for each parameter and the grid is composed of every possible value combination.&lt;/p&gt;
&lt;p&gt;{tune} provides useful defaults for searching parameter spaces of many common hyperparameters, for example, creating grids for the “penalty” parameter in log-10 space. We can simply specify the parameters, pass these to grid_regular(), and specify that we want 5 levels of penalization and 5 levels of mixture.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mixture_param &amp;lt;- parameters(penalty(), mixture())

regular_grid &amp;lt;- grid_regular(mixture_param, levels = c(5, 5))

regular_grid %&amp;gt;% 
  ggplot(aes(x = mixture, y = penalty)) +
  geom_point() +
  scale_y_log10()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-03-31-tidymodels-machine-learning-ecosystem_files/figure-html/unnamed-chunk-16-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;set-non-regular-paraments-for-grid-search&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;set non-regular paraments for grid search&lt;/h2&gt;
&lt;p&gt;{tune} also provides ways to create non-regular grids as well.&lt;/p&gt;
&lt;p&gt;Random grids generated using grid_random() will uniformly sample the parameter space.&lt;/p&gt;
&lt;p&gt;Space-filling designs (SFD) generated using grid_max_entropy() will try to keep candidate values away from one another in order to more efficiently cover the parameter space.&lt;/p&gt;
&lt;p&gt;The below shows how to create a SFD grid and plots 25 candidate values.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sfd_grid &amp;lt;- grid_max_entropy(mixture_param, size = 25)

sfd_grid&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 25 x 2
##     penalty mixture
##       &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;
##  1 1.19e- 7 0.997  
##  2 6.06e- 1 0.0986 
##  3 5.44e- 9 0.718  
##  4 2.27e- 5 0.215  
##  5 2.20e- 7 0.826  
##  6 1.24e- 1 0.929  
##  7 3.25e- 4 0.693  
##  8 6.89e- 3 0.00913
##  9 1.01e- 6 0.517  
## 10 1.71e-10 0.970  
## # … with 15 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sfd_grid %&amp;gt;% 
  ggplot(aes(x = mixture, y = penalty)) +
  geom_point() +
  scale_y_log10()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-03-31-tidymodels-machine-learning-ecosystem_files/figure-html/unnamed-chunk-17-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;parallelization-set-up&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;parallelization set up&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(doParallel)

all_cores &amp;lt;- parallel::detectCores(logical = FALSE)

cl &amp;lt;- makePSOCKcluster(all_cores-1)
registerDoParallel(cl)

clusterEvalQ(cl, {library(tidymodels)})&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [[1]]
##  [1] &amp;quot;yardstick&amp;quot;  &amp;quot;workflows&amp;quot;  &amp;quot;tune&amp;quot;       &amp;quot;tibble&amp;quot;     &amp;quot;rsample&amp;quot;   
##  [6] &amp;quot;tidyr&amp;quot;      &amp;quot;recipes&amp;quot;    &amp;quot;purrr&amp;quot;      &amp;quot;parsnip&amp;quot;    &amp;quot;infer&amp;quot;     
## [11] &amp;quot;ggplot2&amp;quot;    &amp;quot;dplyr&amp;quot;      &amp;quot;dials&amp;quot;      &amp;quot;scales&amp;quot;     &amp;quot;broom&amp;quot;     
## [16] &amp;quot;tidymodels&amp;quot; &amp;quot;stats&amp;quot;      &amp;quot;graphics&amp;quot;   &amp;quot;grDevices&amp;quot;  &amp;quot;utils&amp;quot;     
## [21] &amp;quot;datasets&amp;quot;   &amp;quot;methods&amp;quot;    &amp;quot;base&amp;quot;      
## 
## [[2]]
##  [1] &amp;quot;yardstick&amp;quot;  &amp;quot;workflows&amp;quot;  &amp;quot;tune&amp;quot;       &amp;quot;tibble&amp;quot;     &amp;quot;rsample&amp;quot;   
##  [6] &amp;quot;tidyr&amp;quot;      &amp;quot;recipes&amp;quot;    &amp;quot;purrr&amp;quot;      &amp;quot;parsnip&amp;quot;    &amp;quot;infer&amp;quot;     
## [11] &amp;quot;ggplot2&amp;quot;    &amp;quot;dplyr&amp;quot;      &amp;quot;dials&amp;quot;      &amp;quot;scales&amp;quot;     &amp;quot;broom&amp;quot;     
## [16] &amp;quot;tidymodels&amp;quot; &amp;quot;stats&amp;quot;      &amp;quot;graphics&amp;quot;   &amp;quot;grDevices&amp;quot;  &amp;quot;utils&amp;quot;     
## [21] &amp;quot;datasets&amp;quot;   &amp;quot;methods&amp;quot;    &amp;quot;base&amp;quot;      
## 
## [[3]]
##  [1] &amp;quot;yardstick&amp;quot;  &amp;quot;workflows&amp;quot;  &amp;quot;tune&amp;quot;       &amp;quot;tibble&amp;quot;     &amp;quot;rsample&amp;quot;   
##  [6] &amp;quot;tidyr&amp;quot;      &amp;quot;recipes&amp;quot;    &amp;quot;purrr&amp;quot;      &amp;quot;parsnip&amp;quot;    &amp;quot;infer&amp;quot;     
## [11] &amp;quot;ggplot2&amp;quot;    &amp;quot;dplyr&amp;quot;      &amp;quot;dials&amp;quot;      &amp;quot;scales&amp;quot;     &amp;quot;broom&amp;quot;     
## [16] &amp;quot;tidymodels&amp;quot; &amp;quot;stats&amp;quot;      &amp;quot;graphics&amp;quot;   &amp;quot;grDevices&amp;quot;  &amp;quot;utils&amp;quot;     
## [21] &amp;quot;datasets&amp;quot;   &amp;quot;methods&amp;quot;    &amp;quot;base&amp;quot;      
## 
## [[4]]
##  [1] &amp;quot;yardstick&amp;quot;  &amp;quot;workflows&amp;quot;  &amp;quot;tune&amp;quot;       &amp;quot;tibble&amp;quot;     &amp;quot;rsample&amp;quot;   
##  [6] &amp;quot;tidyr&amp;quot;      &amp;quot;recipes&amp;quot;    &amp;quot;purrr&amp;quot;      &amp;quot;parsnip&amp;quot;    &amp;quot;infer&amp;quot;     
## [11] &amp;quot;ggplot2&amp;quot;    &amp;quot;dplyr&amp;quot;      &amp;quot;dials&amp;quot;      &amp;quot;scales&amp;quot;     &amp;quot;broom&amp;quot;     
## [16] &amp;quot;tidymodels&amp;quot; &amp;quot;stats&amp;quot;      &amp;quot;graphics&amp;quot;   &amp;quot;grDevices&amp;quot;  &amp;quot;utils&amp;quot;     
## [21] &amp;quot;datasets&amp;quot;   &amp;quot;methods&amp;quot;    &amp;quot;base&amp;quot;      
## 
## [[5]]
##  [1] &amp;quot;yardstick&amp;quot;  &amp;quot;workflows&amp;quot;  &amp;quot;tune&amp;quot;       &amp;quot;tibble&amp;quot;     &amp;quot;rsample&amp;quot;   
##  [6] &amp;quot;tidyr&amp;quot;      &amp;quot;recipes&amp;quot;    &amp;quot;purrr&amp;quot;      &amp;quot;parsnip&amp;quot;    &amp;quot;infer&amp;quot;     
## [11] &amp;quot;ggplot2&amp;quot;    &amp;quot;dplyr&amp;quot;      &amp;quot;dials&amp;quot;      &amp;quot;scales&amp;quot;     &amp;quot;broom&amp;quot;     
## [16] &amp;quot;tidymodels&amp;quot; &amp;quot;stats&amp;quot;      &amp;quot;graphics&amp;quot;   &amp;quot;grDevices&amp;quot;  &amp;quot;utils&amp;quot;     
## [21] &amp;quot;datasets&amp;quot;   &amp;quot;methods&amp;quot;    &amp;quot;base&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;tuning-by-parallelization&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;tuning by parallelization&lt;/h2&gt;
&lt;p&gt;Now we’re going to create our tuning object, which will take our recipe, our model, our resamples, and our metrics, to fit our 25 models over 10 resamples and compute our performance metrics, then we’ll stop our parallelization.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data_tune &amp;lt;- tune_grid(
  data_rec,
  model = data_mixture,
  resamples = cv_splits,
  grid = regular_grid,
  metrics = perf_metrics
)

stopCluster(cl)

# Naive Lasso performance
collect_metrics(cv_eval)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 5
##   .metric .estimator   mean     n std_err
##   &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;       &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;   &amp;lt;dbl&amp;gt;
## 1 ccc     standard   0.915     10 0.00660
## 2 rmse    standard   0.0673    10 0.00345
## 3 rsq     standard   0.854     10 0.0122&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;show-best&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;show best&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Best tuned models
show_best(data_tune, &amp;quot;ccc&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 5 x 7
##        penalty mixture .metric .estimator  mean     n std_err
##          &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;      &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;   &amp;lt;dbl&amp;gt;
## 1 0.0000000001    0.25 ccc     standard   0.917    10 0.00660
## 2 0.0000000316    0.25 ccc     standard   0.917    10 0.00660
## 3 0.00001         0.25 ccc     standard   0.917    10 0.00660
## 4 0.0000000001    0.75 ccc     standard   0.917    10 0.00661
## 5 0.0000000316    0.75 ccc     standard   0.917    10 0.00661&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;show_best(data_tune, &amp;quot;rmse&amp;quot;, maximize = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 5 x 7
##        penalty mixture .metric .estimator   mean     n std_err
##          &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;       &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;   &amp;lt;dbl&amp;gt;
## 1 0.00316         0.25 rmse    standard   0.0672    10 0.00334
## 2 0.0000000001    0    rmse    standard   0.0672    10 0.00302
## 3 0.0000000316    0    rmse    standard   0.0672    10 0.00302
## 4 0.00001         0    rmse    standard   0.0672    10 0.00302
## 5 0.00316         0    rmse    standard   0.0672    10 0.00302&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;show_best(data_tune, &amp;quot;rsq&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 5 x 7
##        penalty mixture .metric .estimator  mean     n std_err
##          &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;      &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;   &amp;lt;dbl&amp;gt;
## 1 0.00316         0.25 rsq     standard   0.855    10 0.0116 
## 2 0.0000000001    0    rsq     standard   0.854    10 0.00997
## 3 0.0000000316    0    rsq     standard   0.854    10 0.00997
## 4 0.00001         0    rsq     standard   0.854    10 0.00997
## 5 0.00316         0    rsq     standard   0.854    10 0.00997&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;vis&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;vis&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;collect_metrics(data_tune) %&amp;gt;% 
  filter(.metric == &amp;quot;rmse&amp;quot;) %&amp;gt;%
  mutate(mixture = format(mixture)) %&amp;gt;% 
  ggplot(aes(x = penalty, y = mean, col = mixture)) +
  geom_line() +
  geom_point() +
  scale_x_log10() +
  geom_vline(xintercept = 0.001, color = &amp;quot;purple&amp;quot;, lty = &amp;quot;dotted&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-03-31-tidymodels-machine-learning-ecosystem_files/figure-html/unnamed-chunk-21-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;select-best-model&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;select best model&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;best_mixture &amp;lt;- 
    select_best(data_tune, metric = &amp;quot;rmse&amp;quot;, maximize = FALSE)

best_mixture&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 1 x 2
##   penalty mixture
##     &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;
## 1 0.00316    0.25&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data_mixture_final &amp;lt;-
    data_mixture_wfl %&amp;gt;%
    finalize_workflow(best_mixture) %&amp;gt;%
    fit(data = data_train)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;how-our-model-did-again-our-test-set&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;how our model did again our test set&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data_mixture_final %&amp;gt;% 
  predict(data_test) %&amp;gt;% 
  bind_cols(select(data_test, Sale_Price)) %&amp;gt;% 
  mutate(Sale_Price = log10(Sale_Price)) %&amp;gt;% 
  perf_metrics(truth = Sale_Price, estimate = .pred)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 3
##   .metric .estimator .estimate
##   &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;
## 1 rmse    standard      0.0885
## 2 rsq     standard      0.768 
## 3 ccc     standard      0.867&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;what-variables-turned-out-to-be-the-most-important-in-predicting-sale-price&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;What variables turned out to be the most important in predicting sale price?&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tidy_coefs &amp;lt;- data_mixture_final$fit$fit$fit %&amp;gt;% 
  broom::tidy() %&amp;gt;% 
  filter(term != &amp;quot;(Intercept)&amp;quot;) %&amp;gt;% 
  select(-step, -dev.ratio)

delta &amp;lt;- abs(tidy_coefs$lambda - best_mixture$penalty)
lambda_opt &amp;lt;- tidy_coefs$lambda[which.min(delta)]

label_coefs &amp;lt;- tidy_coefs %&amp;gt;% 
  mutate(abs_estimate = abs(estimate)) %&amp;gt;% 
  filter(abs_estimate &amp;gt;= 0.01) %&amp;gt;% 
  distinct(term) %&amp;gt;% 
  inner_join(tidy_coefs, by = &amp;quot;term&amp;quot;) %&amp;gt;% 
  filter(lambda == lambda_opt)

label_coefs&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 16 x 3
##    term                              estimate  lambda
##    &amp;lt;chr&amp;gt;                                &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;
##  1 PC1                               -0.0340  0.00306
##  2 Garage_Cars                        0.0132  0.00306
##  3 Year_Built                         0.00666 0.00306
##  4 Year_Remod_Add                     0.0247  0.00306
##  5 Fireplaces                         0.0117  0.00306
##  6 TotRms_AbvGrd                      0.0128  0.00306
##  7 BsmtFin_Type_1_GLQ                 0.00617 0.00306
##  8 Full_Bath                          0.0119  0.00306
##  9 Central_Air_Y                      0.0114  0.00306
## 10 MS_Zoning_Residential_Low_Density  0.0138  0.00306
## 11 Functional_Typ                     0.0105  0.00306
## 12 Neighborhood_Edwards              -0.0102  0.00306
## 13 Sale_Type_New                      0.00905 0.00306
## 14 Mas_Vnr_Type_None                  0.00765 0.00306
## 15 Neighborhood_Somerset              0.00908 0.00306
## 16 Mas_Vnr_Type_Stone                 0.00171 0.00306&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tidy_coefs %&amp;gt;% 
  ggplot(aes(x = lambda, y = estimate, group = term, col = term, label = term)) +
  geom_vline(xintercept = lambda_opt, lty = 3) +
  geom_line(alpha = .4) +
  theme(legend.position = &amp;quot;none&amp;quot;) +
  scale_x_log10() +
  ggrepel::geom_text_repel(data = label_coefs)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-03-31-tidymodels-machine-learning-ecosystem_files/figure-html/unnamed-chunk-24-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The above shows the coefficient estimates plotted against lambda, the dotted line indicating the optimal lambda that we selected during our tuning. Nice to see that one of our principal components ended up being important!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;links&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;links&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://dnield.com/posts/tidymodels-intro/&#34;&gt;Introduction to the {tidymodels} Machine Learning Ecosystem | David Nield&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
